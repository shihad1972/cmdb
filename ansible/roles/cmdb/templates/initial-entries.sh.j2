#!/bin/bash

exec > /tmp/initial.log 2>&1

echo "******* Starting initial entries script $(date) *****"

DOMAIN={{ domain}}
IP={{ ip_address }}
REVERSE={{ interfaces[0].network }}
START={{ interfaces[0].start }}
END={{ interfaces[0].end }}
NETMASK={{ interfaces[0].netmask }}
PREFIX={{ interfaces[0].prefix }}

test_listing()
{
    if ! dnsa -l -F; then
        exit 1;
    fi
    if ! dnsa -l -R; then
        exit 1
    fi
    if ! cmdb -l -s; then
        exit 1
    fi
    if ! cmdb -l -u; then
        exit 1
    fi
    if ! cmdb -l -o; then
        exit 1
    fi
    if ! cmdb -l -j; then
        exit 1
    fi
    if ! cmdb -l -g; then
        exit 1
    fi
    for i in cmdb-identity cbc cbcdomain cbclocale cbcos cbcpart cbcscript cbcvarient; do
        if ! ${i} -l; then
            exit 1
        fi
    done
    if ! cbcsysp -l -p; then
        exit 1
    fi
}


for i in cmdb dnsa cbc cbcdomain cbcpart cbcvarient cbcos cmdb-identity; do
    if ! which $i >/dev/null; then
        echo "No $i"
        exit 1
    fi
done

echo "First testing listing everything"
test_listing

echo "Adding build domain ${DOMAIN}"
echo ""

cbcdomain -a -n ${DOMAIN} -k ${START},${END},${IP},${NETMASK},${IP}

if ! dnsa -l -F | grep ^${DOMAIN}; then
    echo "Domain not added into dnsa?"
    exit 1;
fi

echo "Setting default build domain"
echo ""
if ! cbcdomain -z -n ${DOMAIN}; then
    echo "Cannot set default build domain: $?"
    exit 1;
fi

echo "Testing double add into dnsa"
echo ""
if ! dnsa -z -F -n ${DOMAIN}; then
    echo "Adding test zone failed? $?"
    exit 1;
fi

echo "Adding reverse zone..."
echo ""
if ! dnsa -z -R -n ${REVERSE} -p ${PREFIX}; then
    echo "Adding reverse zone failed: $?"
    exit 1
fi

echo "Testing listing reverse zone"
echo ""
if ! dnsa -l -R | grep ^${REVERSE}; then
    echo "Cannot list reverse zone ${REVERSE}/${PREFIX}"
    exit 1;
fi

echo "Adding OS"
echo ""
if ! cbcos -a -n Debian -s debian -o 10 -e buster -t x86_64; then
    echo "Cannot add Debian OS: $?"
    exit 1;
fi

echo "Setting default OS"
echo ""
if ! cbcos -z -n debian -o 10 -t x86_64; then
    echo "Cannot set default OS: $?"
    exit 1;
fi

echo "Adding locale"
echo ""
if ! cbclocale -a -k gb -o en_GB -n english -t Europe/London -u GB -g en; then
    echo "Cannot add locale english: $?"
    exit 1;
fi

echo "Setting default locale"
echo ""
if ! cbclocale -z -n english; then
    echo "Cannot set default locale: $?"
    exit 1;
fi

echo "Adding partition schemes"
echo ""
if ! cbcpart -a -s -n base; then
    echo "Cannot add partition scheme base"
    exit 1
fi
if ! cbcpart -a -s -j -n base-lvm; then
    echo "Cannot add partition scheme base-lvm"
    exit 1
fi
if ! cbcpart -a -s -n secure; then
    echo "Cannot add partition scheme secure"
    exit 1
fi

echo "Defining partitions in schemes"
if ! cbcpart -a -p -n base -i 5120 -x 10240 -y 100 -f ext4 -t /; then
    echo "Cannot add partition / into base partition scheme"
    exit 1
fi
if ! cbcpart -a -p -n base-lvm -g root -i 5120 -x 10240 -y 100 -f ext4 -t /; then
    echo "Cannot add partition / into base-lvm partition schme"
    exit 1
fi
if ! cbcpart -a -p -n secure -i 3072 -x 6144 -y 100 -f ext4 -t /; then
    echo "Cannot add partition / into secure partition scheme"
    exit 1
fi
if ! cbcpart -a -p -n secure -i 3072 -x 6144 -y 100 -f ext4 -t /var; then
    echo "Cannot add partition /var into secure partition scheme"
    exit 1
fi
if ! cbcpart -a -p -n secure -i 3072 -x 6144 -y 100 -f ext4 -t /var/log; then
    echo "Cannot add partition /var/log into secure partition scheme"
    exit 1
fi
if ! cbcpart -a -p -n secure -i 1024 -x 2048 -y 100 -f ext4 -t /tmp; then
    echo "Cannot add partition /tmp into secure partition scheme"
    exit 1
fi

echo "Adding partition options for the secure scheme"
if ! cbcpart -a -o -n secure -t /var -b nosuid; then
    echo "Cannot add nosuid option to partition /var in scheme secure"
    exit 1
fi
if ! cbcpart -a -o -n secure -t /var -b nodev; then
    echo "Cannot add nodev option to partition /var in scheme secure"
    exit 1
fi
if ! cbcpart -a -o -n secure -t /tmp -b nosuid; then
    echo "Cannot add nosuid option to partition /tmp in scheme secure"
    exit 1
fi
if ! cbcpart -a -o -n secure -t /tmp -b nodev; then
    echo "Cannot add nodev option to partition /tmp in scheme secure"
    exit 1
fi
if ! cbcpart -a -o -n secure -t /var/log -b nosuid; then
    echo "Cannot add nosuid option to partition /var/log in scheme secure"
    exit 1
fi
if ! cbcpart -a -o -n secure -t /var/log -b nodev; then
    echo "Cannot add nodev option to partition /var/log in scheme secure"
    exit 1
fi
if ! cbcpart -a -o -n secure -t /var/log -b noexec; then
    echo "Cannot add noexec option to partition /var/log in scheme secure"
    exit 1
fi

echo "Setting default partition scheme"
if ! cbcpart -z -n secure; then
    echo "Cannot set default partition scheme"
    exit 1
fi

echo "Adding base varient"
if ! cbcvarient -a -j -x "Base varient" -k base; then
    echo "Cannot add base varient"
    exit 1
fi

echo "Adding packages to base varient"
for i in ntp openssh-server postfix sudo sysstat ntpdate nfs4-acl-tools less locate sssd; do
    if ! cbcvarient -a -g -x base -n debian -o 10 -p $i; then
        echo "Cannot add package $i to base varient"
        exit 1
    fi
done

echo "Adding web server varient"
if ! cbcvarient -a -j -x "Web Server" -k web; then
    echo "Cannot add web server varient"
    exit 1
fi

echo "Setting default varient"
if ! cbcvarient -z -k base; then
    echo "Cannot set base varient as default"
    exit 1
fi

echo "Checking defaults for build"
if ! cbc -u; then 
    echo "Cannot display defaults for build"
    exit 1
fi
if cbc -u | grep ^No; then
    echo "Some defaults have not been set"
    exit 1
fi

echo "Adding base customer"
if ! cmdb -a -u -C AILSAT -n Ailsatech; then
    echo "Cannot add customer AILSAT"
    exit 1
fi
